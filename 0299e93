-- Load the Rayfield library from the provided URL
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()


-- Create a new window for the script
local Window = Rayfield:CreateWindow({
    Name = "‚ùóJBronx Modded‚ùó",
    Icon = 0, -- No icon in the top bar
    LoadingTitle = "‚ùóJBronx Modded‚ùó",
    LoadingSubtitle = "by 0299e93",
    Theme = "Ocean", -- Default theme


    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Allow build warnings


    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Default folder
        FileName = "Big Hub" -- Configuration file name
    },


    Discord = {
        Enabled = true, -- Discord integration enabled
        Invite = "https://discord.gg/udZrtncA", -- Invite link
        RememberJoins = true -- Remember Discord joins
    },


    KeySystem = true, -- Key system enabled
    KeySettings = {
        Title = "üîêKeyüîê",
        Subtitle = "Key System",
        Note = "Key In Discord: https://discord.gg/udZrtncA", -- Key acquisition note
        FileName = "Key", -- Key file name
        SaveKey = true, -- Save the user's key
        GrabKeyFromSite = false, -- No external key grabbing
        Key = {"324ewq8frl.due3qa ,f8dre40qA8888888888FRGfsahsdgjnkl8hrueiwdanf89hynew3unb3 8q7cf6gtwe9yioAl/KYBGHIJNOT6U7"} -- Accepted keys
    }
})


-- Notify the user that the script has been executed
Rayfield:Notify({
    Title = "Executed Script!",
    Content = "Best South Bronx Script",
    Duration = 6.5,
    Image = 4483362458,
})


-- Create a tab for Aimbot features
local MainTab = Window:CreateTab("Aimbot", 4483362458) -- Title and Image ID
local Section = MainTab:CreateSection("Main")


-- Create a button for the Aimbot feature
MainTab:CreateButton({
    Name = "AimBot",
    Callback = function()
        -- Load the Aimbot script from the provided URL
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Actyrn/Scripts/main/AzureModded"))()
    end
})


-- Create a button for Aimbot prediction
MainTab:CreateButton({
    Name = "(‚ùóPut |Camera aimbot| prediction 0.067346‚ùó)",
    Callback = function()
        -- Placeholder for Aimbot prediction functionality
    end,
})


-- Create a new tab for ESP features
local EspTab = Window:CreateTab("Esp", 4483362458) -- Title and Image ID
local EspSection = EspTab:CreateSection("Esp Features")


-- Create a button for the ESP GUI
EspTab:CreateButton({
    Name = "Green Cham (E)",
    Callback = function()
        -- Load the ESP script
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local RunService = game:GetService("RunService")
        local UserInputService = game:GetService("UserInputService")


        local ChamsAdjustments = {
            Enabled = false,
            OutlineColor = Color3.fromRGB(255, 255, 255),
            OutlineTransparency = 0,
            FillColor = Color3.fromRGB(120, 255, 0),
            FillTransparency = 0,
            Keybind = Enum.KeyCode.E,
        }


        local function AddChams(v)
            if v and v.Character and not v.Character:FindFirstChild(v.Name.."_Chams") then
                local ChamsESP = Instance.new("Highlight")
                ChamsESP.Name = v.Name.."_Chams"
                ChamsESP.OutlineColor = ChamsAdjustments.OutlineColor
                ChamsESP.OutlineTransparency = ChamsAdjustments.OutlineTransparency
                ChamsESP.FillColor = ChamsAdjustments.FillColor
                ChamsESP.FillTransparency = ChamsAdjustments.FillTransparency
                ChamsESP.Parent = v.Character
                ChamsESP.Adornee = v.Character
            end
        end


        local function UpdateChams(v)
            if v and v.Character and v.Character:FindFirstChild(v.Name.."_Chams") then
                local ChamsESP = v.Character:FindFirstChild(v.Name.."_Chams")
                ChamsESP.Enabled = ChamsAdjustments.Enabled
                ChamsESP.OutlineColor = ChamsAdjustments.OutlineColor
                ChamsESP.OutlineTransparency = ChamsAdjustments.OutlineTransparency
                ChamsESP.FillColor = ChamsAdjustments.FillColor
                ChamsESP.FillTransparency = ChamsAdjustments.FillTransparency
            end
        end


        local function RemoveChams(v)
            if v and v.Character and v.Character:FindFirstChild(v.Name.."_Chams") then
                v.Character:FindFirstChild(v.Name.."_Chams"):Destroy()
            end
        end


        UserInputService.InputBegan:Connect(function(Key)
            if Key.KeyCode == ChamsAdjustments.Keybind and UserInputService:GetFocusedTextBox() == nil then
                ChamsAdjustments.Enabled = not ChamsAdjustments.Enabled
            end
        end)


        RunService.Stepped:Connect(function()
            if ChamsAdjustments.Enabled == true then
                for _,v in pairs(Players:GetPlayers()) do
                    if v ~= LocalPlayer and v.Character then
                        if not v.Character:FindFirstChild(v.Name.."_Chams") then
                            AddChams(v)
                        elseif v.Character:FindFirstChild(v.Name.."_Chams") then
                            UpdateChams(v)
                        end
                    end
                end
            elseif ChamsAdjustments.Enabled == false then
                for _,v in pairs(Players:GetPlayers()) do
                    if v ~= LocalPlayer and v.Character then
                        if v.Character:FindFirstChild(v.Name.."_Chams") then
                            RemoveChams(v)
                        end
                    end
                end
            end
        end)
    end
})


-- Create a new tab for WalkSpeed features
local WalkSpeedTab = Window:CreateTab("WalkSpeed", 4483362458) -- Title and Image ID
local WalkSpeedSection = WalkSpeedTab:CreateSection("WalkSpeed Control")


-- Create a button to set WalkSpeed to 21
WalkSpeedTab:CreateButton({
    Name = "WalkSpeed 21",
    Callback = function()
        -- Enable the speed modification and set speed to 21
        getgenv().Enabled = true
        getgenv().Speed = 21
        loadstring(game:HttpGet("https://raw.githubusercontent.com/eclipsology/SimpleSpeed/main/SimpleSpeed.lua"))()
    end,
})


-- Create a new tab for InstaLoot features
local InstaLootTab = Window:CreateTab("InstaLoot", 4483362458) -- Title, Image
InstaLootTab:CreateButton({
    Name = "Insta Loot",
    Callback = function()
        -- This script sets all ProximityPrompts in the game to have no wait time.


        -- Function to set wait time of all ProximityPrompts to zero
        local function setProximityPromptsNoWaitTime()
            -- Iterate through all Workspace descendants
            for _, object in ipairs(workspace:GetDescendants()) do
                -- Check if the object is a ProximityPrompt
                if object:IsA("ProximityPrompt") then
                    -- Set the Action property to 0 to remove wait time
                    object.ActionText = "" -- Optional: Clear the action text
                    object.RequiresLineOfSight = false -- Optional: Disable line of sight requirement
                    object.HoldDuration = 0 -- Set hold duration to 0 for instant activation
                end
            end
        end


        -- Call the function to apply the changes
        setProximityPromptsNoWaitTime()


        -- Optional: Connect to the event to handle new ProximityPrompts added in the future
        workspace.DescendantAdded:Connect(function(descendant)
            if descendant:IsA("ProximityPrompt") then
                descendant.ActionText = "" -- Optional: Clear the action text
                descendant.RequiresLineOfSight = false -- Optional: Disable line of sight requirement
                descendant.HoldDuration = 0 -- Set hold duration to 0 for instant activation
            end
        end)
    end
})


-- Create a new tab for Inf Yield features
local INFTab = Window:CreateTab("Inf Yield", 4483362458) -- Title, Image
INFTab:CreateButton({
    Name = "Inf Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source"))()
    end,
})


-- Create a new tab for Help
local HelpTab = Window:CreateTab("Help", 4483362458) -- Title, Image
HelpTab:CreateSection("Help")


-- Create a button for Discord help
HelpTab:CreateButton({
    Name = "Help in Discord‚ùó",
    Callback = function()
        -- Placeholder for Discord help functionality
    end,
})


-- Create a button for Name & Box ESP
EspTab:CreateButton({
    Name = "Name & Box Esp",
    Callback = function()
        local Settings = {
            Box_Color = Color3.fromRGB(255, 0, 0),
            Tracer_Color = Color3.fromRGB(255, 0, 0),
            Tracer_Thickness = 1,
            Box_Thickness = 1,
            Tracer_Origin = "Bottom", -- Middle or Bottom if FollowMouse is on this won't matter...
            Tracer_FollowMouse = false,
            Tracers = true
        }
        local Team_Check = {
            TeamCheck = false, -- if TeamColor is on this won't matter...
            Green = Color3.fromRGB(0, 255, 0),
            Red = Color3.fromRGB(255, 0, 0)
        }
        local TeamColor = true


        --// SEPARATION
        local player = game:GetService("Players").LocalPlayer
        local camera = game:GetService("Workspace").CurrentCamera
        local mouse = player:GetMouse()


        local function NewQuad(thickness, color)
            local quad = Drawing.new("Quad")
            quad.Visible = false
            quad.PointA = Vector2.new(0,0)
            quad.PointB = Vector2.new(0,0)
            quad.PointC = Vector2.new(0,0)
            quad.PointD = Vector2.new(0,0)
            quad.Color = color
            quad.Filled = false
            quad.Thickness = thickness
            quad.Transparency = 1
            return quad
        end


        local function NewLine(thickness, color)
            local line = Drawing.new("Line")
            line.Visible = false
            line.From = Vector2.new(0, 0)
            line.To = Vector2.new(0, 0)
            line.Color = color 
            line.Thickness = thickness
            line.Transparency = 1
            return line
        end


        local function Visibility(state, lib)
            for u, x in pairs(lib) do
                x.Visible = state
            end
        end


        local function ToColor3(col) --Function to convert, just cuz c;
            local r = col.r --Red value
            local g = col.g --Green value
            local b = col.b --Blue value
            return Color3.new(r,g,b); --Color3 datatype, made of the RGB inputs
        end


        local black = Color3.fromRGB(0, 0 ,0)
        local function ESP(plr)
            local library = {
                --//Tracer and Black Tracer(black border)
                blacktracer = NewLine(Settings.Tracer_Thickness*2, black),
                tracer = NewLine(Settings.Tracer_Thickness, Settings.Tracer_Color),
                --//Box and Black Box(black border)
                black = NewQuad(Settings.Box_Thickness*2, black),
                box = NewQuad(Settings.Box_Thickness, Settings.Box_Color),
                --//Bar and Green Health Bar (part that moves up/down)
                healthbar = NewLine(3, black),
                greenhealth = NewLine(1.5, black)
            }


            local function Colorize(color)
                for u, x in pairs(library) do
                    if x ~= library.healthbar and x ~= library.greenhealth and x ~= library.blacktracer and x ~= library.black then
                        x.Color = color
                    end
                end
            end


            local function Updater()
                local connection
                connection = game:GetService("RunService").RenderStepped:Connect(function()
                    if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") ~= nil and plr.Character.Humanoid.Health > 0 and plr.Character:FindFirstChild("Head") ~= nil then
                        local HumPos, OnScreen = camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
                        if OnScreen then
                            local head = camera:WorldToViewportPoint(plr.Character.Head.Position)
                            local DistanceY = math.clamp((Vector2.new(head.X, head.Y) - Vector2.new(HumPos.X, HumPos.Y)).magnitude, 2, math.huge)
                            
                            local function Size(item)
                                item.PointA = Vector2.new(HumPos.X + DistanceY, HumPos.Y - DistanceY*2)
                                item.PointB = Vector2.new(HumPos.X - DistanceY, HumPos.Y - DistanceY*2)
                                item.PointC = Vector2.new(HumPos.X - DistanceY, HumPos.Y + DistanceY*2)
                                item.PointD = Vector2.new(HumPos.X + DistanceY, HumPos.Y + DistanceY*2)
                            end
                            Size(library.box)
                            Size(library.black)


                            --//Tracer 
                            if Settings.Tracers then
                                if Settings.Tracer_Origin == "Middle" then
                                    library.tracer.From = camera.ViewportSize*0.5
                                    library.blacktracer.From = camera.ViewportSize*0.5
                                elseif Settings.Tracer_Origin == "Bottom" then
                                    library.tracer.From = Vector2.new(camera.ViewportSize.X*0.5, camera.ViewportSize.Y) 
                                    library.blacktracer.From = Vector2.new(camera.ViewportSize.X*0.5, camera.ViewportSize.Y)
                                end
                                if Settings.Tracer_FollowMouse then
                                    library.tracer.From = Vector2.new(mouse.X, mouse.Y+36)
                                    library.blacktracer.From = Vector2.new(mouse.X, mouse.Y+36)
                                end
                                library.tracer.To = Vector2.new(HumPos.X, HumPos.Y + DistanceY*2)
                                library.blacktracer.To = Vector2.new(HumPos.X, HumPos.Y + DistanceY*2)
                            else 
                                library.tracer.From = Vector2.new(0, 0)
                                library.blacktracer.From = Vector2.new(0, 0)
                                library.tracer.To = Vector2.new(0, 0)
                                library.blacktracer.To = Vector2.new(0, 0)
                            end


                            --// Health Bar
                            local d = (Vector2.new(HumPos.X - DistanceY, HumPos.Y - DistanceY*2) - Vector2.new(HumPos.X - DistanceY, HumPos.Y + DistanceY*2)).magnitude 
                            local healthoffset = plr.Character.Humanoid.Health/plr.Character.Humanoid.MaxHealth * d


                            library.greenhealth.From = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y + DistanceY*2)
                            library.greenhealth.To = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y + DistanceY*2 - healthoffset)


                            library.healthbar.From = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y + DistanceY*2)
                            library.healthbar.To = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y - DistanceY*2)


                            local green = Color3.fromRGB(0, 255, 0)
                            local red = Color3.fromRGB(255, 0, 0)


                            library.greenhealth.Color = red:lerp(green, plr.Character.Humanoid.Health/plr.Character.Humanoid.MaxHealth);


                            if Team_Check.TeamCheck then
                                if plr.TeamColor == player.TeamColor then
                                    Colorize(Team_Check.Green)
                                else 
                                    Colorize(Team_Check.Red)
                                end
                            else 
                                library.tracer.Color = Settings.Tracer_Color
                                library.box.Color = Settings.Box_Color
                            end
                            if TeamColor == true then
                                Colorize(plr.TeamColor.Color)
                            end
                            Visibility(true, library)
                        else 
                            Visibility(false, library)
                        end
                    else 
                        Visibility(false, library)
                        if game.Players:FindFirstChild(plr.Name) == nil then
                            connection:Disconnect()
                        end
                    end
                end)
            end
            coroutine.wrap(Updater)()
        end


        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= player.Name then
                coroutine.wrap(ESP)(v)
            end
        end


        game.Players.PlayerAdded:Connect(function(newplr)
            if newplr.Name ~= player.Name then
                coroutine.wrap(ESP)(newplr)
            end
        end)
    end
})


-- Create a button for Discord link
HelpTab:CreateButton({
    Name = "https://discord.gg/udZrtncA",
    Callback = function()
        -- Placeholder for Discord link functionality
    end,
})
